/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode result;
        //handle 0 case
        if(list1==null){
            return list2;
        }
        if(list2==null){
            return list1;
        }
        //create first node
        if(list1.val<=list2.val){
            result = new ListNode(list1.val);
            list1=list1.next;
        }
        else{
            result = new ListNode(list2.val);
            list2=list2.next;
        }
        ListNode temp = result;
        //compare two list and merge
        while(list1!=null&&list2!=null){
            if(list1.val<=list2.val){
                temp.next = new ListNode(list1.val);
                temp=temp.next;
                list1=list1.next;
            }
            else{
                temp.next = new ListNode(list2.val);
                temp=temp.next;
                list2=list2.next;
            }
        }
        //handle rest of list
        if(list1!=null){
            temp.next = list1;
        }
        if(list2!=null){
            temp.next = list2;
        }
        return result;
    }
}